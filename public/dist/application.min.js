"use strict";var ApplicationConfiguration=function(){var applicationModuleName="m-project",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("competitions"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("faqs"),ApplicationConfiguration.registerModule("introduces"),ApplicationConfiguration.registerModule("mypages"),ApplicationConfiguration.registerModule("news"),ApplicationConfiguration.registerModule("resultsannounces"),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("votes"),angular.module("competitions").run(["Menus",function(Menus){Menus.addMenuItem("topbar","경연대회","competitions","dropdown","/competitions(/create)?"),Menus.addSubMenuItem("topbar","competitions","List Competitions","competitions"),Menus.addSubMenuItem("topbar","competitions","New Competition","competitions/create")}]),angular.module("competitions").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCompetitions",{url:"/competitions",templateUrl:"modules/competitions/views/list-competitions.client.view.html"}).state("createCompetition",{url:"/competitions/create",templateUrl:"modules/competitions/views/create-competition.client.view.html"}).state("viewCompetition",{url:"/competitions/:competitionId",templateUrl:"modules/competitions/views/view-competition.client.view.html"}).state("editCompetition",{url:"/competitions/:competitionId/edit",templateUrl:"modules/competitions/views/edit-competition.client.view.html"})}]),angular.module("competitions").controller("CompetitionsController",["$scope","$stateParams","$location","Authentication","Competitions",function($scope,$stateParams,$location,Authentication,Competitions){$scope.authentication=Authentication,$scope.create=function(){var competition=new Competitions({name:this.name});competition.$save(function(response){$location.path("competitions/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(competition){if(competition){competition.$remove();for(var i in $scope.competitions)$scope.competitions[i]===competition&&$scope.competitions.splice(i,1)}else $scope.competition.$remove(function(){$location.path("competitions")})},$scope.update=function(){var competition=$scope.competition;competition.$update(function(){$location.path("competitions/"+competition._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.competitions=Competitions.query()},$scope.findOne=function(){$scope.competition=Competitions.get({competitionId:$stateParams.competitionId})}}]),angular.module("competitions").factory("Competitions",["$resource",function($resource){return $resource("competitions/:competitionId",{competitionId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("faqs").run(["Menus",function(Menus){Menus.addMenuItem("topbar","FAQ","faqs","dropdown","/faqs(/create)?"),Menus.addSubMenuItem("topbar","faqs","List Faqs","faqs"),Menus.addSubMenuItem("topbar","faqs","New Faq","faqs/create")}]),angular.module("faqs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listFaqs",{url:"/faqs",templateUrl:"modules/faqs/views/list-faqs.client.view.html"}).state("createFaq",{url:"/faqs/create",templateUrl:"modules/faqs/views/create-faq.client.view.html"}).state("viewFaq",{url:"/faqs/:faqId",templateUrl:"modules/faqs/views/view-faq.client.view.html"}).state("editFaq",{url:"/faqs/:faqId/edit",templateUrl:"modules/faqs/views/edit-faq.client.view.html"})}]),angular.module("faqs").controller("FaqsController",["$scope","$stateParams","$location","Authentication","Faqs",function($scope,$stateParams,$location,Authentication,Faqs){$scope.authentication=Authentication,$scope.create=function(){var faq=new Faqs({name:this.name});faq.$save(function(response){$location.path("faqs/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(faq){if(faq){faq.$remove();for(var i in $scope.faqs)$scope.faqs[i]===faq&&$scope.faqs.splice(i,1)}else $scope.faq.$remove(function(){$location.path("faqs")})},$scope.update=function(){var faq=$scope.faq;faq.$update(function(){$location.path("faqs/"+faq._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.faqs=Faqs.query()},$scope.findOne=function(){$scope.faq=Faqs.get({faqId:$stateParams.faqId})}}]),angular.module("faqs").factory("Faqs",["$resource",function($resource){return $resource("faqs/:faqId",{faqId:"@_id"},{update:{method:"PUT"}})}]),angular.module("introduces").run(["Menus",function(Menus){Menus.addMenuItem("topbar","UNI MUSIC RACE","introduces","/introduces(/create)?")}]),angular.module("introduces").config(["$stateProvider",function($stateProvider){$stateProvider.state("listIntroduces",{url:"/introduces",templateUrl:"modules/introduces/views/list-introduces.client.view.html"}).state("createIntroduce",{url:"/introduces/create",templateUrl:"modules/introduces/views/create-introduce.client.view.html"}).state("viewIntroduce",{url:"/introduces/:introduceId",templateUrl:"modules/introduces/views/view-introduce.client.view.html"}).state("editIntroduce",{url:"/introduces/:introduceId/edit",templateUrl:"modules/introduces/views/edit-introduce.client.view.html"})}]),angular.module("introduces").controller("IntroducesController",["$scope","$stateParams","$location","Authentication","Introduces",function($scope,$stateParams,$location,Authentication,Introduces){$scope.authentication=Authentication,$scope.create=function(){var introduce=new Introduces({name:this.name});introduce.$save(function(response){$location.path("introduces/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(introduce){if(introduce){introduce.$remove();for(var i in $scope.introduces)$scope.introduces[i]===introduce&&$scope.introduces.splice(i,1)}else $scope.introduce.$remove(function(){$location.path("introduces")})},$scope.update=function(){var introduce=$scope.introduce;introduce.$update(function(){$location.path("introduces/"+introduce._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.introduces=Introduces.query()},$scope.findOne=function(){$scope.introduce=Introduces.get({introduceId:$stateParams.introduceId})}}]),angular.module("introduces").factory("Introduces",["$resource",function($resource){return $resource("introduces/:introduceId",{introduceId:"@_id"},{update:{method:"PUT"}})}]),angular.module("mypages").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Mypages","mypages","dropdown","/mypages(/create)?"),Menus.addSubMenuItem("topbar","mypages","List Mypages","mypages"),Menus.addSubMenuItem("topbar","mypages","New Mypage","mypages/create")}]),angular.module("mypages").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMypages",{url:"/mypages",templateUrl:"modules/mypages/views/list-mypages.client.view.html"}).state("createMypage",{url:"/mypages/create",templateUrl:"modules/mypages/views/create-mypage.client.view.html"}).state("viewMypage",{url:"/mypages/:mypageId",templateUrl:"modules/mypages/views/view-mypage.client.view.html"}).state("editMypage",{url:"/mypages/:mypageId/edit",templateUrl:"modules/mypages/views/edit-mypage.client.view.html"})}]),angular.module("mypages").controller("MypagesController",["$scope","$stateParams","$location","Authentication","Mypages",function($scope,$stateParams,$location,Authentication,Mypages){$scope.authentication=Authentication,$scope.create=function(){var mypage=new Mypages({name:this.name});mypage.$save(function(response){$location.path("mypages/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(mypage){if(mypage){mypage.$remove();for(var i in $scope.mypages)$scope.mypages[i]===mypage&&$scope.mypages.splice(i,1)}else $scope.mypage.$remove(function(){$location.path("mypages")})},$scope.update=function(){var mypage=$scope.mypage;mypage.$update(function(){$location.path("mypages/"+mypage._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.mypages=Mypages.query()},$scope.findOne=function(){$scope.mypage=Mypages.get({mypageId:$stateParams.mypageId})}}]),angular.module("mypages").factory("Mypages",["$resource",function($resource){return $resource("mypages/:mypageId",{mypageId:"@_id"},{update:{method:"PUT"}})}]),angular.module("news").run(["Menus",function(Menus){Menus.addMenuItem("topbar","News","news","dropdown","/news(/create)?"),Menus.addSubMenuItem("topbar","news","List News","news"),Menus.addSubMenuItem("topbar","news","New News","news/create")}]),angular.module("news").config(["$stateProvider",function($stateProvider){$stateProvider.state("listNews",{url:"/news",templateUrl:"modules/news/views/list-news.client.view.html"}).state("createNews",{url:"/news/create",templateUrl:"modules/news/views/create-news.client.view.html"}).state("viewNews",{url:"/news/:newsId",templateUrl:"modules/news/views/view-news.client.view.html"}).state("editNews",{url:"/news/:newsId/edit",templateUrl:"modules/news/views/edit-news.client.view.html"})}]),angular.module("news").controller("NewsController",["$scope","$stateParams","$location","Authentication","News",function($scope,$stateParams,$location,Authentication,News){$scope.authentication=Authentication,$scope.create=function(){var news=new News({name:this.name,content:this.content});news.$save(function(response){$location.path("news/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(news){if(news){news.$remove();for(var i in $scope.news)$scope.news[i]===news&&$scope.news.splice(i,1)}else $scope.news.$remove(function(){$location.path("news")})},$scope.update=function(){var news=$scope.news;news.$update(function(){$location.path("news/"+news._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.news=News.query()},$scope.findOne=function(){$scope.news=News.get({newsId:$stateParams.newsId})}}]),angular.module("news").factory("News",["$resource",function($resource){return $resource("news/:newsId",{newsId:"@_id"},{update:{method:"PUT"}})}]),angular.module("resultsannounces").run(["Menus",function(Menus){Menus.addMenuItem("topbar","결과발표","resultsannounces","dropdown","/resultsannounces(/create)?"),Menus.addSubMenuItem("topbar","resultsannounces","List Resultsannounces","resultsannounces"),Menus.addSubMenuItem("topbar","resultsannounces","New Resultsannounce","resultsannounces/create")}]),angular.module("resultsannounces").config(["$stateProvider",function($stateProvider){$stateProvider.state("listResultsannounces",{url:"/resultsannounces",templateUrl:"modules/resultsannounces/views/list-resultsannounces.client.view.html"}).state("createResultsannounce",{url:"/resultsannounces/create",templateUrl:"modules/resultsannounces/views/create-resultsannounce.client.view.html"}).state("viewResultsannounce",{url:"/resultsannounces/:resultsannounceId",templateUrl:"modules/resultsannounces/views/view-resultsannounce.client.view.html"}).state("editResultsannounce",{url:"/resultsannounces/:resultsannounceId/edit",templateUrl:"modules/resultsannounces/views/edit-resultsannounce.client.view.html"})}]),angular.module("resultsannounces").controller("ResultsannouncesController",["$scope","$stateParams","$location","Authentication","Resultsannounces",function($scope,$stateParams,$location,Authentication,Resultsannounces){$scope.authentication=Authentication,$scope.create=function(){var resultsannounce=new Resultsannounces({name:this.name});resultsannounce.$save(function(response){$location.path("resultsannounces/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(resultsannounce){if(resultsannounce){resultsannounce.$remove();for(var i in $scope.resultsannounces)$scope.resultsannounces[i]===resultsannounce&&$scope.resultsannounces.splice(i,1)}else $scope.resultsannounce.$remove(function(){$location.path("resultsannounces")})},$scope.update=function(){var resultsannounce=$scope.resultsannounce;resultsannounce.$update(function(){$location.path("resultsannounces/"+resultsannounce._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.resultsannounces=Resultsannounces.query()},$scope.findOne=function(){$scope.resultsannounce=Resultsannounces.get({resultsannounceId:$stateParams.resultsannounceId})}}]),angular.module("resultsannounces").factory("Resultsannounces",["$resource",function($resource){return $resource("resultsannounces/:resultsannounceId",{resultsannounceId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("votes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listVotes",{url:"/votes",templateUrl:"modules/votes/views/list-votes.client.view.html"}).state("createVote",{url:"/votes/create",templateUrl:"modules/votes/views/create-vote.client.view.html"}).state("viewVote",{url:"/votes/:voteId",templateUrl:"modules/votes/views/view-vote.client.view.html"}).state("editVote",{url:"/votes/:voteId/edit",templateUrl:"modules/votes/views/edit-vote.client.view.html"})}]),angular.module("votes").controller("VotesController",["$scope","$stateParams","$location","Authentication","Votes",function($scope,$stateParams,$location,Authentication,Votes){$scope.authentication=Authentication,$scope.create=function(){var vote=new Votes({name:this.name});vote.$save(function(response){$location.path("votes/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(vote){if(vote){vote.$remove();for(var i in $scope.votes)$scope.votes[i]===vote&&$scope.votes.splice(i,1)}else $scope.vote.$remove(function(){$location.path("votes")})},$scope.update=function(){var vote=$scope.vote;vote.$update(function(){$location.path("votes/"+vote._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.votes=Votes.query()},$scope.findOne=function(){$scope.vote=Votes.get({voteId:$stateParams.voteId})}}]),angular.module("votes").factory("Votes",["$resource",function($resource){return $resource("votes/:voteId",{voteId:"@_id"},{update:{method:"PUT"}})}]);